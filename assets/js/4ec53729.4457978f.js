"use strict";(self.webpackChunknethvoice_doc_site=self.webpackChunknethvoice_doc_site||[]).push([[4395],{7879:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"administrator-manual/introduction","title":"Introduction","description":"NethVoice is a comprehensive communication system that integrates voice, video, and mobile capabilities.","source":"@site/docs/administrator-manual/introduction.md","sourceDirName":"administrator-manual","slug":"/administrator-manual/introduction","permalink":"/nethvoice-doc-site/docs/administrator-manual/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/administrator-manual/introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Introduction","sidebar_position":1},"sidebar":"administratorManualSidebar","next":{"title":"Installation","permalink":"/nethvoice-doc-site/docs/administrator-manual/install"}}');var t=s(4848),r=s(8453);const o={title:"Introduction",sidebar_position:1},a="NethVoice",c={},d=[];function l(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"nethvoice",children:"NethVoice"})}),"\n",(0,t.jsx)(n.p,{children:"NethVoice is a comprehensive communication system that integrates voice, video, and mobile capabilities.\nThe NethVoice module is divided into seven main parts:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.freepbx.org/",children:"FreePBX"}),": A web-based open-source graphical user interface (GUI) that manages ",(0,t.jsx)(n.a,{href:"https://www.asterisk.org",children:"Asterisk"}),", a voice over IP and telephony server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nethesis/nethcti-server",children:"NethVoice CTI Server"}),": A daemon that provides a set of APIs to perform common switchboard operations and a WebSocket streaming channel to listen for events."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nethesis/nethcti",children:"NethVoice CTI Client"}),": A web application to manage the telephone switchboard via communication with the NethVoice CTI Server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nethesis/nethvoice-report",children:"NethVoice Report"}),": An ",(0,t.jsx)(n.a,{href:"https://www.asterisk.org",children:"Asterisk"})," CDR and queues reporting system."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://janus.conf.meetecho.com/",children:"Janus"}),": A WebRTC server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://mariadb.org/",children:"MariaDB"}),": A popular open-source relational database."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nethesis.github.io/tancredi",children:"Tancredi"}),": A phone provisioning engine ideal for internet deployments."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"NethVoice offers a comprehensive set of features for unified communications and PBX management, including:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integration with FreePBX and Asterisk"}),": Web-based GUI for managing telephony services."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CTI Server and Client"}),": APIs and web applications for switchboard operations and user management."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reporting"}),": Call Detail Records (CDR) and queue reporting system."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"WebRTC Support"}),": Integration with Janus for video and web communications."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Database Integration"}),": Uses MariaDB for data storage."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Phone Provisioning"}),": Automated provisioning engine (Tancredi) for supported phone models."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-instance Support"}),": Install multiple NethVoice instances on the same node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Proxy and User Domain Management"}),": Requires configuration of proxy and user domains."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Virtual Host Configuration"}),": Dedicated FQDNs for admin and CTI web applications."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Let's Encrypt Integration"}),": Automated SSL certificate management."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User and Extension Management"}),": Associate users with extensions, manage users and passwords."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trunk Management"}),": Configure physical gateways and VoIP trunks (SIP, PJSIP)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Inbound/Outbound Routing"}),": Visual call flow editor and customizable route priorities."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Device Management"}),": Provision and manage phones, set admin/user passwords, encryption, and preferences."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Model and Custom Device Support"}),": Manage phone models, create custom models, and configure device-specific settings."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Group and Profile Management"}),": Create user groups and permission profiles with granular feature access."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Permissions System"}),": Fine-grained control over telephony features, address book, CDR, customer cards, presence, queues, and operator stations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Device Association"}),": Link up to 9 devices per user (web phone, mobile app, physical phones)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provisioning Methods"}),": Supports RPS, DHCP, and manual provisioning URLs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Firmware Management"}),": Upload and distribute firmware updates to phones."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Supported Phones and Gateways"}),": Compatibility with major brands (NethPhone, Fanvil, Yealink, Snom, Gigaset, Grandstream, Patton)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provisioning Parameters"}),": Configure soft keys, line keys, expansion keys, screen/ringtone, preferences, LDAP phonebook, and network settings."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Click-to-Call"}),": Initiate calls from web or desktop clients, with NethLink integration."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Gateway Provisioning"}),": Automated and manual configuration for supported gateways."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dashboard"}),": Overview of users, devices, trunks, and their statuses."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Applications"}),": Create and manage customer cards, address book sources, and parameterized URLs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"External Address Book Integration"}),": Import contacts from MySQL, CSV, or custom scripts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameterized URLs"}),": Trigger custom URLs on call events with dynamic parameters."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can install multiple NethVoice instances on the same node from the ",(0,t.jsx)(n.code,{children:"software_center-section"}),", but the module requires the ",(0,t.jsx)(n.code,{children:"NethVoice proxy <nethvoice_proxy-section>"})," to be already configured and running."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);